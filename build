import subprocess, os, re
RUN_PATH = os.getcwd()

debug_files = ["debug/DebugRNG"]
parser_files = ["AntBrainParser"]

buildLog = ""

lint_errors = []
def runTests(path):
	global buildLog
	try:
		out = subprocess.check_output(["nodeunit",path], shell=True)
		buildLog += out
	except subprocess.CalledProcessError as error:
		buildLog += error.output
		print "Some file(s) failed testing. Check the build log for details."

def runAcceptanceTest():
	pass

def lintFile(filename):
	"""Runs jshint to check the syntax of the file for goodness"""
	global lint_errors, buildLog
	try:
		out = subprocess.check_output(["jshint","./src/"+filename+".js"],shell=True)
		buildLog += "\n"+filename+" passed linting successfully"
	except subprocess.CalledProcessError as error:
		buildLog += "\n" + error.output
		output_lines = re.findall(r'(.*)\n',error.output)
		lint_errors.extend([line for line in output_lines if line.find(filename) > -1])

def printLintErrors():
	"""If lint errors have been found, prints them."""
	if len(lint_errors) > 0:
		print "LINT ERRORS"
		for error in lint_errors:
			print "   ",error

if __name__ == "__main__":
	[lintFile(filename) for filename in debug_files+parser_files]
	printLintErrors()
	runTests("./test/")
	f = open("build.log","w")
	f.write(buildLog)
	f.close()